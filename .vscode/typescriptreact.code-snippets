{
    "Fragment Hook": {
        "prefix": "frghk",
        "body": [
            "import type { ${TM_FILENAME_BASE}_${2:$1}\\$key } from './__generated__/${TM_FILENAME_BASE}_$2.graphql';",
            "",
            "import { useFragment } from 'react-relay';",
            "import { graphql } from 'babel-plugin-relay/macro';",
            "",
            "function ${TM_FILENAME_BASE}($2: ${TM_FILENAME_BASE}_$2\\$key) {",
            "    const decoded = useFragment(",
            "        graphql`",
            "            fragment ${TM_FILENAME_BASE}_$2 on $1 {",
            "                $0",
            "            }",
            "        `,",
            "        $2",
            "    );",
            "",
            "}",
            "",
            "export default ${TM_FILENAME_BASE};"
        ],
        "description": "Creates a React Component with a Fragment"
    },
    "Fragment Component": {
        "prefix": "frg",
        "body": [
            "import type { ${TM_FILENAME_BASE}_${2:$1}\\$key } from './__generated__/${TM_FILENAME_BASE}_$2.graphql';",
            "",
            "import React from 'react';",
            "",
            "import { useFragment } from 'react-relay';",
            "import { graphql } from 'babel-plugin-relay/macro';",
            "",
            "type Props = {",
            "    $2: ${TM_FILENAME_BASE}_$2\\$key,",
            "}",
            "",
            "function ${TM_FILENAME_BASE}(props: Props) {",
            "    const $2 = useFragment(",
            "        graphql`",
            "            fragment ${TM_FILENAME_BASE}_$2 on $1 {",
            "                $0",
            "            }",
            "        `,",
            "        props.$2",
            "    );",
            "",
            "    return (",
            "        <p>Hello World</p>",
            "    );",
            "}",
            "",
            "export default ${TM_FILENAME_BASE};"
        ],
        "description": "Creates a React Component with a Fragment"
    },
    "Query Component": {
        "prefix": "query",
        "body": [
            "import type { ${TM_FILENAME_BASE}Query as ${TM_FILENAME_BASE}QueryType } from './__generated__/${TM_FILENAME_BASE}Query.graphql';",
            "import type { ErrorBoundary } from 'react-error-boundary';",
            "import type { PreloadedQuery } from 'react-relay';",
            "",
            "import ${TM_FILENAME_BASE}Query from './__generated__/${TM_FILENAME_BASE}Query.graphql';",
            "",
            "import React, { useEffect, useRef } from 'react';",
            "",
            "import { usePreloadedQuery, useQueryLoader } from 'react-relay';",
            "import { graphql } from 'babel-plugin-relay/macro';",
            "",
            "import Suspense from 'Suspense';",
            "",
            "type LoadedProps = {",
            "    ${1:data}: PreloadedQuery<${TM_FILENAME_BASE}QueryType>",
            "}",
            "",
            "type Props = {",
            "    ",
            "}",
            "",
            "function Loaded${TM_FILENAME_BASE}(props: LoadedProps) {",
            "    const $1 = usePreloadedQuery(",
            "        graphql`",
            "            query ${TM_FILENAME_BASE}Query {",
            "                $0",
            "            }",
            "        `,",
            "        props.$1",
            "    );",
            "",
            "    return (",
            "        <p>Hello World</p>",
            "    );",
            "}",
            "",
            "function ${TM_FILENAME_BASE}(props: Props) {",
            "    const [",
            "        $1,",
            "        loadQuery,",
            "        dispose,",
            "    ] = useQueryLoader<${TM_FILENAME_BASE}QueryType>(${TM_FILENAME_BASE}Query);",
            "",
            "    const error = useRef<ErrorBoundary>(null);",
            "    useEffect(() => {",
            "        error.current?.reset();",
            "        loadQuery({ });",
            "        return () => {",
            "            dispose();",
            "        };",
            "    }, [dispose, loadQuery]);",
            "",
            "    return (",
            "        <Suspense boundaryRef={error}>",
            "            {$1 != null && <Loaded${TM_FILENAME_BASE} $1={$1}/>}",
            "        </Suspense>",
            "    );",
            "}",
            "",
            "export default ${TM_FILENAME_BASE};"
        ],
        "description": "Creates a React Component with a Fragment"
    },
    "Component": {
        "prefix": "comp",
        "body": [
            "import React from 'react'",
            "",
            "type Props = {",
            "    $1",
            "}",
            "",
            "function ${TM_FILENAME_BASE}(props: Props) {",
            "    return (",
            "        $0",
            "    );",
            "}",
            "",
            "export default ${TM_FILENAME_BASE};"
        ],
        "description": "Creates a Component"
    },
}